#BlueJ class context
comment0.params=a\ b\ c\ d\ str\ x
comment0.target=Constraint(int,\ int,\ int,\ int,\ java.lang.String,\ FutoshikiPuzzle)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ FutoshikiPuzzle\r\n\ \r\n\ @param\ a\ \ \ \ \ A\ row\ coordinate\ of\ square\ next\ to\ constraint\r\n\ @param\ b\ \ \ \ \ A\ column\ coordinate\ of\ square\ next\ to\ constraint\r\n\ @param\ c\ \ \ \ \ A\ row\ coordinate\ of\ square\ next\ to\ constraint\r\n\ @param\ d\ \ \ \ \ A\ column\ coordinate\ of\ square\ next\ to\ constraint\r\n\ @param\ str\ \ \ A\ String\ value\ for\ constraint\r\n\ @param\ x\ \ \ \ \ A\ FutoshikiPuzzle\ which\ containts\ the\ constraint\r\n
comment1.params=
comment1.target=int\ getColumn()
comment1.text=\r\n\ Get\ column\ coordinate\ of\ current\ constraint\r\n\ \r\n\ @return\ \ \ \ \ \ Return\ integer\ column\ coordinate\ of\ current\ constraint\r\n
comment10.params=symb
comment10.target=void\ setSymbol(java.lang.String)
comment10.text=\r\n\ Set\ symbol\ representing\ current\ constraint\r\n\ \r\n\ @param\ symb\ \ \ \ \ \ String\ to\ input\ as\ symbol\ in\ the\ constraint\r\n
comment2.params=
comment2.target=boolean\ getEditable()
comment2.text=\r\n\ Get\ the\ value\ of\ variable\ "editable"\r\n\ \r\n\ @return\ \ True\ if\ the\ button\ is\ editable,\ False\ otherwise.\r\n
comment3.params=
comment3.target=java.lang.String\ getProblem()
comment3.text=\r\n\ Shows\ violations\ of\ current\ constraint\r\n\ \r\n\ @return\ \ \ \ \ \ A\ string\ containing\ violations\ of\ current\ constraint\r\n
comment4.params=
comment4.target=int\ getRow()
comment4.text=\r\n\ Get\ row\ coordinate\ of\ current\ constraint\r\n\ \r\n\ @return\ \ \ \ \ \ Return\ integer\ row\ coordinate\ of\ current\ constraint\r\n
comment5.params=
comment5.target=FutoshikiSquare\ getSquareA()
comment5.text=\r\n\ Get\ a\ FutoshikiSquare\ before\ the\ constraint\r\n\ \r\n\ @return\ \ \ \ \ \ A\ FutoshikiSquare\ before\ the\ constraint\r\n
comment6.params=
comment6.target=FutoshikiSquare\ getSquareB()
comment6.text=\r\n\ Get\ a\ FutoshikiSquare\ after\ the\ constraint\r\n\ \r\n\ @return\ \ \ \ \ \ A\ FutoshikiSquare\ after\ the\ constraint\r\n
comment7.params=
comment7.target=java.lang.String\ getSymbol()
comment7.text=\r\n\ Get\ symbol\ of\ the\ constraint\r\n\ \r\n\ @return\ \ \ \ \ \ Return\ String\ symbol\ representing\ the\ constraint\r\n
comment8.params=
comment8.target=boolean\ isFine()
comment8.text=\r\n\ Check\ for\ invalid\ numbers\ in\ FutoshikiSquares\ on\ both\ sides\ of\ constraint\ and\ if\ they\ violate\ the\ constraint\r\n\ \r\n\ @return\ \ \ \ \ \ False\ if\ there\ is\ any\ violation\ of\ constraint,\ true\ otherwise\r\n
comment9.params=a
comment9.target=void\ setEditable(boolean)
comment9.text=\r\n\ Set\ the\ value\ editable\ to\ either\ True\ or\ False.\ If\ the\ editable\ is\ false,\ background\ color\ of\ the\ button\ will\ be\ grey.\r\n\ \r\n\ @param\ a\ \ \ \ \ A\ boolean\ value\ to\ set\ variable\ "editable"\r\n
numComments=11
